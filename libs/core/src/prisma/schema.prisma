generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model address {
  city                   String   @default("")
  company                String   @default("")
  countryId              String?
  createdAt              DateTime @default(dbgenerated())
  defaultBillingAddress  Int      @default(0)
  defaultShippingAddress Int      @default(0)
  fullName               String   @default("")
  id                     String   @id
  phoneNumber            String   @default("")
  postalCode             String   @default("")
  province               String   @default("")
  streetLine1            String
  streetLine2            String   @default("")
  updatedAt              DateTime @default(dbgenerated())
  country                country? @relation(fields: [countryId], references: [id])

  @@index([countryId], name: "FK_d87215343c3a3a67e6a0b7f3ea9")
}

model administrator {
  createdAt    DateTime           @default(dbgenerated())
  emailAddress String             @unique
  firstName    String
  id           String             @id
  lastName     String?
  type         administrator_type @default(SUPERADMIN)
  updatedAt    DateTime           @default(dbgenerated())
  userId       String?            @unique
  user         user?              @relation(fields: [userId], references: [id])
}

model Asset {
  createdAt           DateTime              @default(dbgenerated())
  fileSize            Int
  focalPoint          String?
  folderId            String?
  height              Int                   @default(0)
  id                  String                @id
  mimeType            String
  name                String
  preview             String
  source              String
  type                String
  updatedAt           DateTime              @default(dbgenerated())
  width               Int                   @default(0)
  asset_folder        asset_folder?         @relation(fields: [folderId], references: [id])
  product             product[]
  product_asset       product_asset[]
  productVariantAsset productVariantAsset[]

  @@index([folderId], name: "FK_a403e334cd05763758ad5f21a76")
}

model asset_folder {
  createdAt DateTime @default(dbgenerated())
  id        String   @id
  name      String
  updatedAt DateTime @default(dbgenerated())
  Asset     Asset[]

  @@map("asset-folder")
}

model billing_agreement {
  collectionId String?
  createdAt    DateTime                @default(dbgenerated())
  id           String                  @id
  state        billing_agreement_state
  storeId      String?
  type         billing_agreement_type
  updatedAt    DateTime                @default(dbgenerated())
  value        Float                   @default(0)
  collection   collection?             @relation(fields: [collectionId], references: [id])
  store        store?                  @relation(fields: [storeId], references: [id])

  @@index([storeId], name: "FK_1fc565a2da256e3cb8858c148c2")
  @@index([collectionId], name: "FK_833f8dc32d1bebea0bbe18c3fe8")
  @@map("billing-agreement")
}

model category {
  categoryName String   @unique
  createdAt    DateTime @default(dbgenerated())
  description  String
  id           String   @id
  updatedAt    DateTime @default(dbgenerated())
}

model channel {
  code                                     String   @unique
  createdAt                                DateTime @default(dbgenerated())
  currencyCode                             String
  defaultLanguageCode                      String
  defaultShippingZoneId                    String?
  defaultTaxZoneId                         String?
  id                                       String   @id
  pricesIncludeTax                         Int
  token                                    String   @unique
  updatedAt                                DateTime @default(dbgenerated())
  zone_channel_defaultShippingZoneIdTozone zone?    @relation("channel_defaultShippingZoneIdTozone", fields: [defaultShippingZoneId], references: [id])
  zone_channel_defaultTaxZoneIdTozone      zone?    @relation("channel_defaultTaxZoneIdTozone", fields: [defaultTaxZoneId], references: [id])

  @@index([defaultTaxZoneId], name: "FK_afe9f917a1c82b9e9e69f7c6129")
  @@index([defaultShippingZoneId], name: "FK_c9ca2f58d4517460435cbd8b4c9")
}

model collection {
  createdAt         DateTime            @default(dbgenerated())
  description       String
  id                String              @id
  inMenu            Int                 @default(1)
  isPrivate         Int                 @default(0)
  isRoot            Int                 @default(0)
  name              String
  nsleft            Int                 @default(1)
  nsright           Int                 @default(2)
  parentId          String?
  position          Int                 @default(0)
  seoId             String?             @unique
  updatedAt         DateTime            @default(dbgenerated())
  collection        collection?         @relation("collectionTocollection_parentId", fields: [parentId], references: [id])
  seo               seo?                @relation(fields: [seoId], references: [id])
  billing_agreement billing_agreement[]
  other_collection  collection[]        @relation("collectionTocollection_parentId")

  @@index([parentId], name: "FK_4257b61275144db89fa0f5dc059")
}

model collectionAsset {
  collectionId String
  createdAt    DateTime @default(dbgenerated())
  id           String
  updatedAt    DateTime @default(dbgenerated())

  @@id([id, collectionId])
}

model collectiontranslation {
  createdAt   DateTime @default(dbgenerated())
  description String
  id          String   @id
  name        String
  updatedAt   DateTime @default(dbgenerated())
}

model country {
  code                 String
  createdAt            DateTime               @default(dbgenerated())
  enabled              Int
  id                   String                 @id
  name                 String
  updatedAt            DateTime               @default(dbgenerated())
  address              address[]
  store                store[]
  zone_members_country zone_members_country[]
}

model customer {
  createdAt    DateTime  @default(dbgenerated())
  deletedAt    DateTime?
  emailAddress String    @unique
  firstName    String
  id           String    @id
  lastName     String
  phoneNumber  String?
  title        String?
  updatedAt    DateTime  @default(dbgenerated())
}

model customer_group {
  createdAt DateTime @default(dbgenerated())
  id        String   @id
  name      String
  updatedAt DateTime @default(dbgenerated())

  @@map("customer-group")
}

model facet {
  code                 String                 @unique
  createdAt            DateTime               @default(dbgenerated())
  id                   String                 @id
  isPrivate            Int                    @default(0)
  name                 String
  updatedAt            DateTime               @default(dbgenerated())
  facetValue           facetValue[]
  product_facets_facet product_facets_facet[]
}

model facetValue {
  code                       String
  createdAt                  DateTime                     @default(dbgenerated())
  facetId                    String?
  id                         String                       @id
  updatedAt                  DateTime                     @default(dbgenerated())
  facet                      facet?                       @relation(fields: [facetId], references: [id])
  product_facets_facet_value product_facets_facet_value[]

  @@index([facetId], name: "FK_1fa4a3ebae6115d180f42d54147")
}

model fulfillment {
  createdAt    DateTime @default(dbgenerated())
  id           String   @id
  method       String
  trackingCode String   @default("")
  updatedAt    DateTime @default(dbgenerated())
}

model global_settings {
  createdAt      DateTime @default(dbgenerated())
  id             String   @id
  trackInventory Int      @default(0)
  updatedAt      DateTime @default(dbgenerated())

  @@map("global-settings")
}

model histroyEntry {
  createdAt DateTime @default(dbgenerated())
  data      String
  id        String   @id
  isPublic  Int
  updatedAt DateTime @default(dbgenerated())
}

model order {
  createdAt         DateTime @default(dbgenerated())
  id                String   @id
  orderPlacedAt     DateTime
  shippingWithTax   Int      @default(0)
  subTotal          Int
  subTotalBeforeTax Int
  updatedAt         DateTime @default(dbgenerated())
}

model order_item {
  cancelled            Int      @default(0)
  createdAt            DateTime @default(dbgenerated())
  id                   String   @id
  unitPrice            Int
  unitPriceIncludesTax Int
  updatedAt            DateTime @default(dbgenerated())

  @@map("order-item")
}

model order_line {
  createdAt DateTime @default(dbgenerated())
  id        String   @id
  updatedAt DateTime @default(dbgenerated())

  @@map("order-line")
}

model orderHistroyEntry {
  createdAt DateTime @default(dbgenerated())
  id        String   @id
  updatedAt DateTime @default(dbgenerated())
}

model pin {
  createdAt   DateTime @default(dbgenerated())
  deliveryPin String
  id          String   @id
  updatedAt   DateTime @default(dbgenerated())
}

model product {
  createdAt                  DateTime                     @default(dbgenerated())
  description                String
  enabled                    Int                          @default(1)
  featuredAssetId            String?
  id                         String                       @id
  productName                String
  slug                       String
  updatedAt                  DateTime                     @default(dbgenerated())
  Asset                      Asset?                       @relation(fields: [featuredAssetId], references: [id])
  product_asset              product_asset[]
  product_facets_facet       product_facets_facet[]
  product_facets_facet_value product_facets_facet_value[]
  productOptionGroup         productOptionGroup[]
  productVariant             productVariant[]

  @@index([featuredAssetId], name: "FK_91a19e6613534949a4ce6e76ff8")
}

model product_asset {
  assetId   String?
  createdAt DateTime @default(dbgenerated())
  id        String   @id
  productId String?
  updatedAt DateTime @default(dbgenerated())
  Asset     Asset?   @relation(fields: [assetId], references: [id])
  product   product? @relation(fields: [productId], references: [id])

  @@index([productId], name: "FK_6673a01bc1dc23631a7da7e50e1")
  @@index([assetId], name: "FK_c5f1ed34347bd478952741915d8")
  @@map("product-asset")
}

model product_facets_facet {
  facetId   String
  productId String
  facet     facet   @relation(fields: [facetId], references: [id])
  product   product @relation(fields: [productId], references: [id])

  @@id([productId, facetId])
  @@index([productId], name: "IDX_4aac1567b6349e3bc21d9d929b")
  @@index([facetId], name: "IDX_ab15a43c2c46fa023fcbaf2558")
}

model product_facets_facet_value {
  facetValueId String
  productId    String
  facetValue   facetValue @relation(fields: [facetValueId], references: [id])
  product      product    @relation(fields: [productId], references: [id])

  @@id([productId, facetValueId])
  @@index([facetValueId], name: "IDX_204f025ee3e3af693e22e039d7")
  @@index([productId], name: "IDX_3bc7bbc3be59ead1bf330d6a53")
}

model product_variant_options_product_option {
  productOptionId  String
  productVariantId String
  productOption    productOption  @relation(fields: [productOptionId], references: [id])
  productVariant   productVariant @relation(fields: [productVariantId], references: [id])

  @@id([productVariantId, productOptionId])
  @@index([productVariantId], name: "IDX_526f0131260eec308a3bd2b61b")
  @@index([productOptionId], name: "IDX_e96a71affe63c97f7fa2f076da")
}

model productOption {
  code                                   String
  createdAt                              DateTime                                 @default(dbgenerated())
  groupId                                String?
  id                                     String                                   @id
  name                                   String
  updatedAt                              DateTime                                 @default(dbgenerated())
  productOptionGroup                     productOptionGroup?                      @relation(fields: [groupId], references: [id])
  product_variant_options_product_option product_variant_options_product_option[]

  @@index([groupId], name: "FK_f47cc2087e8a2fcba0c6fa4d7e6")
}

model productOptionGroup {
  code          String
  createdAt     DateTime        @default(dbgenerated())
  id            String          @id
  name          String
  productId     String?
  updatedAt     DateTime        @default(dbgenerated())
  product       product?        @relation(fields: [productId], references: [id])
  productOption productOption[]

  @@index([productId], name: "FK_68bc419e4b224ab99cf1ab34d36")
}

model productVariant {
  createdAt                              DateTime                                 @default(dbgenerated())
  deletedAt                              DateTime?
  dum_price                              Int                                      @default(0)
  enabled                                Int                                      @default(1)
  id                                     String                                   @id
  name                                   String
  priceId                                String?                                  @unique
  productId                              String?
  sku                                    String                                   @default("")
  trackInventory                         Int                                      @default(1)
  updatedAt                              DateTime                                 @default(dbgenerated())
  productVariantPrice                    productVariantPrice?                     @relation(fields: [priceId], references: [id])
  product                                product?                                 @relation(fields: [productId], references: [id])
  product_variant_options_product_option product_variant_options_product_option[]
  productVariantAsset                    productVariantAsset?

  @@index([productId], name: "FK_99d757ba6e22ecaf82920a8f55c")
}

model productVariantAsset {
  assetId        String?
  createdAt      DateTime        @default(dbgenerated())
  id             String          @id
  updatedAt      DateTime        @default(dbgenerated())
  variantId      String?         @unique
  Asset          Asset?          @relation(fields: [assetId], references: [id])
  productVariant productVariant? @relation(fields: [variantId], references: [id])

  @@index([assetId], name: "FK_f75dc7025da9748e132e1cb214c")
}

model productVariantPrice {
  createdAt      DateTime        @default(dbgenerated())
  id             String          @id
  price          Int
  taxId          String?
  taxIncluded    Int
  updatedAt      DateTime        @default(dbgenerated())
  taxRate        taxRate?        @relation(fields: [taxId], references: [id])
  productVariant productVariant?

  @@index([taxId], name: "FK_eb30c101b5e1e18c62c142fec4c")
}

model role {
  code        String
  createdAt   DateTime  @default(dbgenerated())
  description String
  id          String    @id
  permissions String
  type        role_type @default(BASIC)
  updatedAt   DateTime  @default(dbgenerated())
}

model seo {
  id           String      @id
  metadesc     String
  metakeywords String
  metatitle    String
  urlKey       String
  collection   collection?
}

model session {
  createdAt DateTime @default(dbgenerated())
  id        String   @id
  sessionId String?
  token     String
  type      String
  updatedAt DateTime @default(dbgenerated())
  userId    String?
  user      user?    @relation(fields: [userId], references: [id])

  @@index([userId], name: "FK_3d2f174ef04fb312fdebd0ddc53")
  @@index([type], name: "IDX_e5598363000cab9d9116bd5835")
}

model store {
  channelMarkets    Int                 @default(0)
  countryId         String?
  createdAt         DateTime            @default(dbgenerated())
  GSTIN             String              @default("")
  id                String              @id
  officialemail     String              @unique
  phoneNumber       String
  regionId          String?
  rentalStore       Int                 @default(0)
  singleStore       Int                 @default(1)
  storeName         String
  streetAddress1    String
  streetAddress2    String
  type              store_type          @default(default)
  updatedAt         DateTime            @default(dbgenerated())
  zipcode           String
  country           country?            @relation(fields: [countryId], references: [id])
  zone              zone?               @relation(fields: [regionId], references: [id])
  billing_agreement billing_agreement[]
  taxCategory       taxCategory[]
  vendor            vendor?

  @@index([regionId], name: "FK_26fe9e05a517d67ca575fcc298c")
  @@index([countryId], name: "FK_9cf88dad662503c14602a27a0a1")
}

model taxCategory {
  createdAt DateTime  @default(dbgenerated())
  id        String    @id
  name      String
  storeId   String?
  updatedAt DateTime  @default(dbgenerated())
  store     store?    @relation(fields: [storeId], references: [id])
  taxRate   taxRate[]

  @@index([storeId], name: "FK_a87a18fd5ad3de7ff1b1a39dbfb")
}

model taxRate {
  categoryId          String?
  createdAt           DateTime              @default(dbgenerated())
  enabled             Int
  id                  String                @id
  name                String
  updatedAt           DateTime              @default(dbgenerated())
  value               Float
  zoneId              String?
  taxCategory         taxCategory?          @relation(fields: [categoryId], references: [id])
  zone                zone?                 @relation(fields: [zoneId], references: [id])
  productVariantPrice productVariantPrice[]

  @@index([categoryId], name: "FK_266a909739f9c373e3c80e98be6")
  @@index([zoneId], name: "FK_6de8e83b2470e19e30b06f1f874")
}

model user {
  address               String?
  createdAt             DateTime       @default(dbgenerated())
  email                 String         @unique
  firstName             String?
  id                    String         @id
  identifierChangeToken String?
  lastLogin             String?
  lastName              String?
  password              String
  passwordResetToken    String?
  pendingIdentifier     String?
  phoneNumber           String
  updatedAt             DateTime       @default(dbgenerated())
  verificationToken     String?
  verified              Int            @default(0)
  administrator         administrator?
  session               session[]
  vendor                vendor?
}

model vendor {
  createdAt      DateTime        @default(dbgenerated())
  email          String          @unique
  id             String          @id
  licenseId      String?         @unique
  phoneNumber    String
  storeId        String?         @unique
  updatedAt      DateTime        @default(dbgenerated())
  userId         String?         @unique
  vendorName     String
  vendor_license vendor_license? @relation(fields: [licenseId], references: [id])
  store          store?          @relation(fields: [storeId], references: [id])
  user           user?           @relation(fields: [userId], references: [id])
}

model vendor_license {
  id           String        @id
  plansId      String?
  tenureEnd    DateTime
  tenureStart  DateTime
  vendor_plans vendor_plans? @relation(fields: [plansId], references: [id])
  vendor       vendor?

  @@index([plansId], name: "FK_e03e49d9b38744bd02fe16ed1d2")
  @@map("vendor-license")
}

model vendor_pin {
  createdAt   DateTime @default(dbgenerated())
  deliveryPin String
  id          String   @id
  updatedAt   DateTime @default(dbgenerated())

  @@map("vendor-pin")
}

model vendor_plans {
  createdAt      DateTime                    @default(dbgenerated())
  id             String                      @id
  isActive       Int                         @default(0)
  name           String
  planValue      Float                       @default(0)
  priceStrategy  vendor_plans_priceStrategy  @default(FLAT)
  tenureStrategy vendor_plans_tenureStrategy @default(ANNUAL)
  updatedAt      DateTime                    @default(dbgenerated())
  vendor_license vendor_license[]

  @@map("vendor-plans")
}

model zone {
  createdAt                                   DateTime               @default(dbgenerated())
  id                                          String                 @id
  name                                        String
  updatedAt                                   DateTime               @default(dbgenerated())
  channel_channel_defaultShippingZoneIdTozone channel[]              @relation("channel_defaultShippingZoneIdTozone")
  channel_channel_defaultTaxZoneIdTozone      channel[]              @relation("channel_defaultTaxZoneIdTozone")
  store                                       store[]
  taxRate                                     taxRate[]
  zone_members_country                        zone_members_country[]
}

model zone_members_country {
  countryId String
  zoneId    String
  country   country @relation(fields: [countryId], references: [id])
  zone      zone    @relation(fields: [zoneId], references: [id])

  @@id([zoneId, countryId])
  @@index([zoneId], name: "IDX_7350d77b6474313fbbaf4b094c")
  @@index([countryId], name: "IDX_7baeecaf955e54bec73f998b0d")
}

enum administrator_type {
  SUPERADMIN
  STAFF
}

enum billing_agreement_state {
  APPROVED
  PENDING
  REJECTED

   @@map("billing-agreement_state")
}

enum billing_agreement_type {
  PLANBASE
  COLLECTIONBASE
  COMISSIONBASE

   @@map("billing-agreement_type")
}

enum role_type {
  ADMINISTRATOR
  VENDOR
  USER
  BASIC
}

enum store_type {
  default
  vendor
}

enum vendor_plans_priceStrategy {
  FLAT
  INDIVIDUALCOLLECTION
  COMMISSION

   @@map("vendor-plans_priceStrategy")
}

enum vendor_plans_tenureStrategy {
  MONTHLY
  HALF_YEARLY @map("HALF-YEARLY")
  ANNUAL

   @@map("vendor-plans_tenureStrategy")
}